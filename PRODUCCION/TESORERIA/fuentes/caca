64a65,72
> DEFINE rm_retsri	ARRAY[10000] OF RECORD
> 				c03_codigo_sri	LIKE ordt003.c03_codigo_sri,
> 				c03_descripcion	LIKE ordt003.c03_descripcion,
> 				tipo_imp	CHAR(1)
> 			END RECORD
> DEFINE vm_num_det	INTEGER
> DEFINE vm_max_det	INTEGER
> DEFINE rm_c03		RECORD LIKE ordt003.*
142a151
> LET vm_max_det  = 10000
184c193,194
< 		subtotal 	DECIMAL(12,2)
---
> 		subtotal 	DECIMAL(12,2),
> 		codi_sri	VARCHAR(15,6)
189a200,211
> 	CREATE TEMP TABLE tmp_tipo_porc(
> 		proveed		INTEGER		NOT NULL,
> 		tipodoc		CHAR(2)		NOT NULL,
> 		numdoc		CHAR(15)	NOT NULL,
> 		divid		SMALLINT	NOT NULL,
> 		tiporet		CHAR(1)		NOT NULL,
> 		porcen		DECIMAL(5,2)	NOT NULL,
> 		codigo_sri	VARCHAR(15,6)	NOT NULL
> 	)
> 	CREATE UNIQUE INDEX tmp_pk3
> 		ON tmp_tipo_porc(proveed, tipodoc, numdoc, divid,tiporet,porcen)
> 
375c397
< LET rm_orden[vm_columna_1]  = 'ASC'
---
> LET rm_orden[vm_columna_1]  = 'DESC'
415c437
< 			LET INT_FLAG = 0
---
> 			LET int_flag = 0
427c449
<      			LET INT_FLAG = 0
---
>      			LET int_flag = 0
558a581
> DEFINE cod_sri		LIKE cxpt026.p26_codigo_sri
860c883
< 			LET r_ret[j].check    = 'N'
---
> 			LET r_ret[j].check       = 'N'
905,906c928,930
< 		val_pagar, tot_ret, val_cheque) RETURNING tot_ret, val_cheque
< 	IF INT_FLAG =1 THEN
---
> 					val_pagar, tot_ret, val_cheque, i)
> 		RETURNING tot_ret, val_cheque
> 	IF int_flag = 1 THEN
910c934
< 	IF INT_FLAG = 2 THEN
---
> 	IF int_flag = 2 THEN
918a943,951
> 			LET cod_sri = NULL
> 			SELECT codigo_sri INTO cod_sri
> 				FROM tmp_tipo_porc
> 				WHERE proveed = rm_docs[i].proveedor
> 				  AND tipodoc = rm_docs[i].tipo_doc
> 				  AND numdoc  = rm_docs[i].num_doc
> 				  AND divid   = rm_docs[i].dividendo
> 				  AND tiporet = r_ret[j].tipo_ret
> 				  AND porcen  = r_ret[j].porc
920,927c953,957
< 				VALUES(rm_docs[i].proveedor, 
< 				       rm_docs[i].tipo_doc,
< 			               rm_docs[i].num_doc,   
< 			               rm_docs[i].dividendo,
< 			       	       r_ret[j].tipo_ret,    
< 			       	       r_ret[j].porc,
< 			       	       r_ret[j].val_base,    
< 			       	       r_ret[j].subtotal)
---
> 				VALUES(rm_docs[i].proveedor,rm_docs[i].tipo_doc,
> 					rm_docs[i].num_doc,rm_docs[i].dividendo,
> 					r_ret[j].tipo_ret, r_ret[j].porc,
> 					r_ret[j].val_base, r_ret[j].subtotal,
> 					cod_sri)
931c961
< 	LET INT_FLAG = INT_FLAG
---
> 	LET int_flag = int_flag
953c983
< 			     val_pagar, tot_ret, val_cheque)
---
> 			     val_pagar, tot_ret, val_cheque, ind2)
969a1000
> DEFINE ind2 		SMALLINT
994c1025
< 		CALL control_visor_teclas_caracter_1() 
---
> 		CALL control_visor_teclas_caracter_4() 
996c1027
< 		LET INT_FLAG = 2
---
> 		LET int_flag = 2
997a1029,1033
> 	ON KEY(F6)
> 		LET i = arr_curr()
> 		LET j = scr_line()
> 		CALL control_codigos_sri(i, ind2)
> 		LET int_flag = 0
1001a1038
> 		--#CALL dialog.keysetlabel("F6","Códigos SRI")
1633c1670
< 	    '		tipo_ret, porc, val_base, subtotal',
---
> 	    '		tipo_ret, porc, codi_sri, val_base, subtotal',
1650c1687
< 	SELECT tipo_ret, porc, val_base, subtotal
---
> 	SELECT tipo_ret, porc, codi_sri, val_base, subtotal
1658c1695,1696
< 			   r_p26.p26_valor_base, r_p26.p26_valor_ret
---
> 			   r_p26.p26_codigo_sri, r_p26.p26_valor_base,
> 			   r_p26.p26_valor_ret
1734c1772
< 		LET INT_FLAG = 0
---
> 		LET int_flag = 0
2105a2144,2320
> FUNCTION muestra_tipovcto(tipovcto)
> DEFINE tipovcto		CHAR(1)
> 
> CASE tipovcto
> 	WHEN 'V'
> 		DISPLAY 'VENCIDOS' TO tit_tipo_vcto
> 	WHEN 'P'
> 		DISPLAY 'POR VENCER' TO tit_tipo_vcto
> 	WHEN 'T'
> 		DISPLAY 'T O D O S' TO tit_tipo_vcto
> 	OTHERWISE
> 		CLEAR tipo_vcto, tit_tipo_vcto
> END CASE
> 
> END FUNCTION
> 
> 
> 
> FUNCTION control_codigos_sri(ind, ind2)
> DEFINE ind, ind2	SMALLINT
> DEFINE r_c03		RECORD LIKE ordt003.*
> DEFINE ini_rows 	SMALLINT
> DEFINE num_rows 	SMALLINT
> DEFINE num_cols 	SMALLINT
> DEFINE i, j, salir 	SMALLINT
> DEFINE cont, posi	SMALLINT
> DEFINE pos_ori		SMALLINT
> DEFINE resp		CHAR(6)
> 
> LET ini_rows = 04
> LET num_rows = 18
> LET num_cols = 72
> IF vg_gui = 0 THEN
> 	LET ini_rows = 05
> 	LET num_rows = 18
> 	LET num_cols = 73
> END IF
> OPEN WINDOW w_cxpf204_6 AT ini_rows, 05 WITH num_rows ROWS, num_cols COLUMNS
> 	ATTRIBUTE(FORM LINE FIRST, COMMENT LINE LAST, MESSAGE LINE LAST, BORDER)
> IF vg_gui = 1 THEN
> 	OPEN FORM f_cxpf204_6 FROM "../forms/cxpf204_6"
> ELSE
> 	OPEN FORM f_cxpf204_6 FROM "../forms/cxpf204_6c"
> END IF
> DISPLAY FORM f_cxpf204_6
> --#DISPLAY 'Código'		TO tit_col1 
> --#DISPLAY 'Descripción'	TO tit_col2 
> --#DISPLAY 'E'			TO tit_col3 
> OPTIONS INSERT KEY F30,
> 	DELETE KEY F31
> CLEAR c03_tipo_ret, c02_nombre, c03_porcentaje
> FOR i = 1 TO fgl_scr_size('rm_retsri')
> 	CLEAR rm_retsri[i].*
> END FOR
> FOR i = 1 TO vm_max_det
> 	INITIALIZE rm_retsri[i].* TO NULL
> END FOR
> INITIALIZE rm_c03.* TO NULL
> DECLARE q_c03 CURSOR WITH HOLD FOR
> 	SELECT * FROM ordt003
> 		WHERE c03_compania   = vg_codcia
> 		  AND c03_tipo_ret   = r_ret[ind].tipo_ret
> 		  AND c03_porcentaje = r_ret[ind].porc
> OPEN q_c03
> FETCH q_c03 INTO rm_c03.*
> IF STATUS = NOTFOUND THEN
> 	CLOSE q_c03
> 	FREE q_c03
> 	CALL fl_mensaje_consulta_sin_registros()
> 	RETURN
> END IF
> LET vm_num_det = 1
> LET pos_ori    = 0
> FOREACH q_c03 INTO rm_c03.*
> 	LET rm_retsri[vm_num_det].c03_codigo_sri  = rm_c03.c03_codigo_sri
> 	LET rm_retsri[vm_num_det].c03_descripcion = rm_c03.c03_descripcion
> 	LET rm_retsri[vm_num_det].tipo_imp        = 'N'
> 	SELECT * FROM tmp_tipo_porc
> 		WHERE proveed    = rm_docs[ind2].proveedor
> 		  AND tipodoc    = rm_docs[ind2].tipo_doc
> 		  AND numdoc     = rm_docs[ind2].num_doc
> 		  AND divid      = rm_docs[ind2].dividendo
> 		  AND tiporet    = r_ret[ind].tipo_ret
> 		  AND porcen     = r_ret[ind].porc
> 		  AND codigo_sri = rm_retsri[vm_num_det].c03_codigo_sri
> 	IF STATUS <> NOTFOUND THEN
> 		LET rm_retsri[vm_num_det].tipo_imp = 'S'
> 		LET pos_ori                        = vm_num_det
> 	END IF
> 	LET vm_num_det = vm_num_det + 1
> 	IF vm_num_det > vm_max_det THEN
> 		CALL fl_mensaje_arreglo_incompleto()
> 		EXIT PROGRAM
> 	END IF
> END FOREACH
> LET vm_num_det = vm_num_det - 1
> IF vm_num_det = 0 THEN
> 	LET vm_num_det = 1
> END IF
> DISPLAY BY NAME rm_c03.c03_tipo_ret, rm_c03.c03_porcentaje
> DISPLAY r_ret[ind].n_retencion TO c02_nombre
> LET salir = 0
> WHILE NOT salir
> 	CALL set_count(vm_num_det)
> 	LET int_flag = 0
> 	INPUT ARRAY rm_retsri WITHOUT DEFAULTS FROM rm_retsri.*
> 		ON KEY(INTERRUPT)
> 			LET int_flag = 0
> 			CALL fl_mensaje_abandonar_proceso() RETURNING resp
> 			IF resp = 'Yes' THEN
> 				LET int_flag = 1
> 				LET salir    = 1
> 				EXIT INPUT
> 			END IF
> 		ON KEY(F1,CONTROL-W)
> 			CALL llamar_visor_teclas()
> 		BEFORE INPUT
> 			--#CALL dialog.keysetlabel("F1","")
> 			--#CALL dialog.keysetlabel("CONTROL-W","")
> 			--#CALL dialog.keysetlabel("INSERT","")
> 			--#CALL dialog.keysetlabel("DELETE","")
> 		BEFORE ROW
> 			LET i = arr_curr()
> 			LET j = scr_line()
> 			DISPLAY i          TO num_row
> 			DISPLAY vm_num_det TO max_row
> 		BEFORE INSERT
> 			EXIT INPUT
> 		BEFORE DELETE
> 			EXIT INPUT
> 		AFTER INPUT
> 			LET cont = 0
> 			FOR i = 1 TO vm_num_det
> 				IF rm_retsri[i].tipo_imp = 'S' THEN
> 					LET posi = i
> 					LET cont = cont + 1
> 				END IF
> 			END FOR
> 			IF cont > 1 THEN
> 				CALL fl_mostrar_mensaje('Solo puede marcar un solo código del SRI por cada tipo de impuesto.', 'exclamation')
> 				CONTINUE INPUT
> 			END IF
> 			IF cont = 0 THEN
> 				CALL fl_mostrar_mensaje('Marque al menos un código del SRI.', 'exclamation')
> 				CONTINUE INPUT
> 			END IF
> 			LET salir = 1
> 	END INPUT
> END WHILE
> IF int_flag THEN
> 	CLOSE WINDOW w_cxpf204_6
> 	LET int_flag = 0
> 	RETURN
> END IF
> IF pos_ori > 0 THEN
> 	DELETE FROM tmp_tipo_porc
> 		WHERE proveed    = rm_docs[ind2].proveedor
> 		  AND tipodoc    = rm_docs[ind2].tipo_doc
> 		  AND numdoc     = rm_docs[ind2].num_doc
> 		  AND divid      = rm_docs[ind2].dividendo
> 		  AND tiporet    = r_ret[ind].tipo_ret
> 		  AND porcen     = r_ret[ind].porc
> 		  AND codigo_sri = rm_retsri[pos_ori].c03_codigo_sri
> END IF
> INSERT INTO tmp_tipo_porc
> 	VALUES(rm_docs[ind2].proveedor, rm_docs[ind2].tipo_doc,
> 		rm_docs[ind2].num_doc, rm_docs[ind2].dividendo,
> 		r_ret[ind].tipo_ret, r_ret[ind].porc,
> 		rm_retsri[posi].c03_codigo_sri)
> CALL fl_mostrar_mensaje('Procesados Códigos del SRI.', 'info')
> CLOSE WINDOW w_cxpf204_6
> LET int_flag = 0
> 
> END FUNCTION
> 
> 
> 
2177,2178c2392,2393
< FUNCTION muestra_tipovcto(tipovcto)
< DEFINE tipovcto		CHAR(1)
---
> FUNCTION control_visor_teclas_caracter_4() 
> DEFINE a, fila		INTEGER
2180,2189c2395,2405
< CASE tipovcto
< 	WHEN 'V'
< 		DISPLAY 'VENCIDOS' TO tit_tipo_vcto
< 	WHEN 'P'
< 		DISPLAY 'POR VENCER' TO tit_tipo_vcto
< 	WHEN 'T'
< 		DISPLAY 'T O D O S' TO tit_tipo_vcto
< 	OTHERWISE
< 		CLEAR tipo_vcto, tit_tipo_vcto
< END CASE
---
> CALL fl_visor_teclas_caracter() RETURNING fila
> LET a = fila + 2
> DISPLAY 'Teclas exclusivas de este proceso:' AT a,2 ATTRIBUTE(REVERSE)	
> LET a = a + 1
> DISPLAY '<F5>      Valor a Pagar'            AT a,2
> DISPLAY  'F5' AT a,3 ATTRIBUTE(REVERSE)
> LET a = a + 1
> DISPLAY '<F6>      Códigos SRI'              AT a,2
> DISPLAY  'F6' AT a,3 ATTRIBUTE(REVERSE)
> LET a = fgl_getkey()
> CLOSE WINDOW w_tf
